"use strict";exports.id=70,exports.ids=[70,689],exports.modules={36689:(a,b,c)=>{c.r(b),c.d(b,{createOrReadKeyless:()=>u,removeKeyless:()=>v,safeParseClerkFile:()=>q});var d=c(96380),e=c(21327),f=c(91488);c(27806);var g=c(70495),h=c(40410);async function i(){var a,b,c,d,e,f;let h,i=await (0,g.b3)();return{nodeVersion:process.version,nextVersion:function(){var a;try{return null!=(a=process.title)?a:"unknown-process-title"}catch{return}}(),npmConfigUserAgent:process.env.npm_config_user_agent,userAgent:null!=(a=i.get("User-Agent"))?a:"unknown user-agent",port:process.env.PORT,host:null!=(b=i.get("host"))?b:"unknown host",xPort:null!=(c=i.get("x-forwarded-port"))?c:"unknown x-forwarded-port",xHost:null!=(d=i.get("x-forwarded-host"))?d:"unknown x-forwarded-host",xProtocol:null!=(e=i.get("x-forwarded-proto"))?e:"unknown x-forwarded-proto",xClerkAuthStatus:null!=(f=i.get("x-clerk-auth-status"))?f:"unknown x-clerk-auth-status",isCI:(h=new Set(["","false","0","no"]),j.some(a=>{let b=process.env[a];if(void 0===b)return!1;let c=b.trim().toLowerCase();return!h.has(c)}))}}let j=["CI","CONTINUOUS_INTEGRATION","BUILD_NUMBER","BUILD_ID","BUILDKITE","CIRCLECI","GITHUB_ACTIONS","GITLAB_CI","JENKINS_URL","TRAVIS","APPVEYOR","WERCKER","DRONE","CODESHIP","SEMAPHORE","SHIPPABLE","TEAMCITY_VERSION","BAMBOO_BUILDKEY","GO_PIPELINE_NAME","TF_BUILD","SYSTEM_TEAMFOUNDATIONCOLLECTIONURI","BITBUCKET_BUILD_NUMBER","HEROKU_TEST_RUN_ID","VERCEL","NETLIFY"];function k(a){let b=new Headers;return a.nodeVersion&&b.set("Clerk-Node-Version",a.nodeVersion),a.nextVersion&&b.set("Clerk-Next-Version",a.nextVersion),a.npmConfigUserAgent&&b.set("Clerk-NPM-Config-User-Agent",a.npmConfigUserAgent),a.userAgent&&b.set("Clerk-Client-User-Agent",a.userAgent),a.port&&b.set("Clerk-Node-Port",a.port),a.host&&b.set("Clerk-Client-Host",a.host),a.xPort&&b.set("Clerk-X-Port",a.xPort),a.xHost&&b.set("Clerk-X-Host",a.xHost),a.xProtocol&&b.set("Clerk-X-Protocol",a.xProtocol),a.xClerkAuthStatus&&b.set("Clerk-Auth-Status",a.xClerkAuthStatus),a.isCI&&b.set("Clerk-Is-CI","true"),b}(0,h.D)([i,k]),(0,f.A)(i,"7f09590c8d094a3a8de5bf35c5a32dd085d8cb9d4b",null),(0,f.A)(k,"7fe5388420bea65eed131fecd3cee76528edfd4f1f",null);let l=".clerk",m="clerk.lock",n=(...a)=>{let b=(0,e.dc)(),c=(0,e.y4)();return b.join(c(),l,...a)},o=".tmp",p=!1;function q(){let{readFileSync:a}=(0,e.p8)();try{let b,c=n(o,"keyless.json");try{b=a(c,{encoding:"utf-8"})||"{}"}catch{b="{}"}return JSON.parse(b)}catch{return}}let r=()=>{let{writeFileSync:a}=(0,e.p8)();p=!0,a(m,"This file can be deleted. Please delete this file and refresh your application",{encoding:"utf8",mode:"0777",flag:"w"})},s=()=>{let{rmSync:a}=(0,e.p8)();try{a(m,{force:!0,recursive:!0})}catch{}p=!1},t=()=>{let{existsSync:a}=(0,e.p8)();return p||a(m)};async function u(){let{writeFileSync:a,mkdirSync:b}=(0,e.p8)();if(t())return null;r();let c=n(o,"keyless.json"),f=n(o,"README.md");b(n(o),{recursive:!0}),function(){let{existsSync:a,writeFileSync:b,readFileSync:c,appendFileSync:d}=(0,e.p8)(),f=(0,e.dc)(),g=(0,e.y4)(),h=f.join(g(),".gitignore");a(h)||b(h,""),c(h,"utf-8").includes(l+"/")||d(h,`
# clerk configuration (can include secrets)
/${l}/
`)}();let g=q();if((null==g?void 0:g.publishableKey)&&(null==g?void 0:g.secretKey))return s(),g;let h=(0,d.n)({}),j=await i().then(k).catch(()=>new Headers),m=await h.__experimental_accountlessApplications.createAccountlessApplication({requestHeaders:j}).catch(()=>null);return m&&(a(c,JSON.stringify(m),{encoding:"utf8",mode:"0777",flag:"w"}),a(f,`
## DO NOT COMMIT
This directory is auto-generated from \`@clerk/nextjs\` because you are running in Keyless mode. Avoid committing the \`.clerk/\` directory as it includes the secret key of the unclaimed instance.
  `,{encoding:"utf8",mode:"0777",flag:"w"})),s(),m}function v(){let{rmSync:a}=(0,e.p8)();if(!t()){r();try{a(n(),{force:!0,recursive:!0})}catch{}s()}}}};